{"version":3,"sources":["Components/Number.js","Components/Buttons/AddButton.js","Components/Buttons/SubtractButton.js","Components/Buttons/SubDisabledButton.js","Components/Buttons/ResetButton.js","Components/Buttons/ResetDisabledButton.js","App.js","reportWebVitals.js","index.js"],"names":["Number","props","number","AddButton","Button","onClick","clicked","variant","color","SubtractButton","disabled","ResetButton","App","useState","state","setState","Grid","className","container","item","xs","spacing","SubDisabledButton","ResetDisabledButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAUeA,EARA,SAACC,GACZ,OACI,8BACKA,EAAMC,U,QCKJC,EARG,SAACF,GACf,OACI,cAACG,EAAA,EAAD,CAAQC,QAASJ,EAAMK,QAASC,QAAQ,YAAYC,MAAM,UAA1D,kBCOOC,EARQ,SAACR,GACpB,OACI,cAACG,EAAA,EAAD,CAAQC,QAASJ,EAAMK,QAASC,QAAQ,YAAYC,MAAM,YAA1D,uBCMOC,EARQ,SAACR,GACpB,OACI,cAACG,EAAA,EAAD,CAAQC,QAASJ,EAAMK,QAASC,QAAQ,YAAYC,MAAM,YAAYE,UAAQ,EAA9E,uBCMOC,EARK,SAACV,GACjB,OACI,cAACG,EAAA,EAAD,CAAQC,QAASJ,EAAMK,QAAUC,QAAQ,YAAYC,MAAM,UAA3D,oBCMOG,EARK,SAACV,GACjB,OACI,cAACG,EAAA,EAAD,CAAQC,QAASJ,EAAMK,QAAUC,QAAQ,YAAYC,MAAM,UAAUE,UAAQ,EAA7E,oBCiDOE,MA1Cf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,KAeb,OACE,eAACC,EAAA,EAAD,CAAMC,UAAU,MAAMC,WAAS,EAA/B,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIH,UAAU,SAA7B,SACE,cAAC,EAAD,CAAQf,OAAQY,MAElB,eAACE,EAAA,EAAD,CAAME,WAAS,EAACG,QAAS,EAAGJ,UAAU,YAAtC,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,EAAD,CAAWb,QAnBA,WACjBS,EAASD,EAAQ,QAoBb,cAACE,EAAA,EAAD,CAAMG,MAAI,EAAV,SACGL,EAAQ,EACP,cAAC,EAAD,CAAgBR,QAnBP,WACjBS,EAASD,EAAQ,MAmBT,cAACQ,EAAD,MAGJ,cAACN,EAAA,EAAD,CAAMG,MAAI,EAAV,SACIL,EAAQ,EACV,cAAC,EAAD,CAAaR,QArBA,WACnBS,EAAS,MAqBH,cAACQ,EAAD,aCjCKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,eAAe,SAMrCZ,M","file":"static/js/main.d5e6ffa4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Number = (props) => {\n    return (\n        <div>\n            {props.number}\n        </div>\n    )\n}\n\nexport default Number\n","import React from 'react'\nimport {Button} from '@material-ui/core'\nconst AddButton = (props) => {\n    return (\n        <Button onClick={props.clicked} variant='contained' color='primary'>\n            Add\n        </Button>\n    )\n}\n\nexport default AddButton\n","import React from 'react'\nimport {Button} from '@material-ui/core'\n\nconst SubtractButton = (props) => {\n    return (\n        <Button onClick={props.clicked} variant='contained' color='secondary'>\n            Subtract\n        </Button>\n    )\n}\n\nexport default SubtractButton\n","import React from 'react'\nimport {Button} from '@material-ui/core'\n\nconst SubtractButton = (props) => {\n    return (\n        <Button onClick={props.clicked} variant='contained' color='secondary' disabled>\n            Subtract\n        </Button>\n    )\n}\n\nexport default SubtractButton","import React from 'react'\nimport {Button} from '@material-ui/core'\n\nconst ResetButton = (props) => {\n    return (\n        <Button onClick={props.clicked}  variant='contained' color='default'> \n            Reset\n        </Button>\n    )\n}\n\nexport default ResetButton\n","import React from 'react'\nimport {Button} from '@material-ui/core'\n\nconst ResetButton = (props) => {\n    return (\n        <Button onClick={props.clicked}  variant='contained' color='default' disabled> \n            Reset\n        </Button>\n    )\n}\n\nexport default ResetButton","import React, { useState } from 'react'\n\nimport './App.css';\n\nimport { Grid } from '@material-ui/core'\nimport Number from './Components/Number'\nimport AddButton from './Components/Buttons/AddButton'\nimport SubtractButton from './Components/Buttons/SubtractButton'\nimport SubDisabledButton from './Components/Buttons/SubDisabledButton'\nimport ResetButton from './Components/Buttons/ResetButton'\nimport ResetDisabledButton from './Components/Buttons/ResetDisabledButton'\n\nfunction App() {\n  const [state, setState] = useState(0)\n\n  const addHandler = () => {\n    setState(state + 1)\n  }\n\n  const subHandler = () => {\n    setState(state - 1)\n  }\n\n  const resetHandler = () => {\n    setState(0)\n  }\n\n  return (\n    <Grid className=\"App\" container>\n      <Grid item xs={12} className=\"BigNum\">\n        <Number number={state}/>\n      </Grid>\n      <Grid container spacing={3} className=\"ButtonBar\">\n        <Grid item>\n          <AddButton clicked={addHandler} />\n        </Grid>\n        <Grid item >\n          {state > 0 ? \n            <SubtractButton clicked={subHandler} />  : \n            <SubDisabledButton />\n            }     \n        </Grid>\n        <Grid item>\n          { state > 0 ?\n          <ResetButton clicked={resetHandler}/> :\n          <ResetDisabledButton />\n          }\n          </Grid>\n      </Grid>\n      \n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}