{"version":3,"sources":["Components/MainSections/BigNumber.js","Components/Buttons/AddButton.js","Components/Buttons/SubtractButton.js","Components/Buttons/SubDisabledButton.js","Components/Buttons/ResetButton.js","Components/Buttons/ResetDisabledButton.js","Components/MainSections/ButtonBar.js","Components/MainSections/DarkToggle.js","Components/MainSections/FontSelector.js","Components/MainSections/SizeSelector.js","HOCs/ColorPickDialog.js","App.js","reportWebVitals.js","index.js"],"names":["BigNumber","props","Grid","item","xs","className","classes","style","backgroundColor","background","color","fontSize","size","fontFamily","fontFam","state","AddButton","Button","onClick","clicked","variant","SubtractButton","disabled","ResetButton","ButtonBar","container","spacing","addClick","subClick","SubDisabledButton","resetClick","ResetDisabledButton","DarkToggle","Tooltip","title","placement","Switch","checked","mode","onChange","FontSelector","FormControl","InputLabel","id","Select","labelId","value","font","defaultValue","default","MenuItem","SizeSelector","paddingTop","Slider","getAriaValueText","aria","aria-labelledby","marks","label","valueLabelDisplay","changed","ColorPickDialog","Dialog","open","onClose","closed","App","useState","setState","fontSizeState","setFontSizeState","fontStyle","setFontStyle","darkMode","setDarkMode","fontColor","setFontColor","bkgroundColor","setBkGroundColor","fontdialogOpen","setFontDialogOpen","bkgrounddialogOpen","setbkgroundDialogOpen","theme","createMuiTheme","palette","primary","main","deepPurple","secondary","purple","type","fontColorDialogToggle","bkgroundColorDialogToggle","ThemeProvider","Paper","event","target","newValue","hex","startIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uSAYeA,EAVG,SAACC,GACf,OACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAMK,QAASC,MAAO,CAACC,gBAAgB,GAAD,OAAKP,EAAMQ,aAA/E,SACI,sBAAMF,MAAO,CAACG,MAAM,GAAD,OAAKT,EAAMS,OAASC,SAAWV,EAAMW,KAAM,KAAOC,WAAW,GAAD,OAAKZ,EAAMa,UAA1F,SACKb,EAAMc,WCIRC,EARG,SAACf,GACf,OACI,cAACgB,EAAA,EAAD,CAAQC,QAASjB,EAAMkB,QAASC,QAAQ,YAAYV,MAAM,UAA1D,kBCOOW,EARQ,SAACpB,GACpB,OACI,cAACgB,EAAA,EAAD,CAAQC,QAASjB,EAAMkB,QAASC,QAAQ,YAAYV,MAAM,YAA1D,uBCMOW,EARQ,SAACpB,GACpB,OACI,cAACgB,EAAA,EAAD,CAAQC,QAASjB,EAAMkB,QAASC,QAAQ,YAAYV,MAAM,YAAYY,UAAQ,EAA9E,uBCMOC,EARK,SAACtB,GACjB,OACI,cAACgB,EAAA,EAAD,CAAQC,QAASjB,EAAMkB,QAAUC,QAAQ,YAAYV,MAAM,UAA3D,oBCMOa,EARK,SAACtB,GACjB,OACI,cAACgB,EAAA,EAAD,CAAQC,QAASjB,EAAMkB,QAAUC,QAAQ,YAAYV,MAAM,UAAUY,UAAQ,EAA7E,oBC0BOE,EAtBG,SAACvB,GACf,OACI,eAACC,EAAA,EAAD,CAAMuB,WAAS,EAACtB,MAAI,EAACuB,QAAS,EAAGrB,UAAU,YAA3C,UACI,cAACH,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC,EAAD,CAAWgB,QAASlB,EAAM0B,aAE9B,cAACzB,EAAA,EAAD,CAAMC,MAAI,EAAV,SACMF,EAAMc,MAAQ,EACZ,cAAC,EAAD,CAAgBI,QAASlB,EAAM2B,WAC/B,cAACC,EAAD,MAGR,cAAC3B,EAAA,EAAD,CAAMC,MAAI,EAAV,SACMF,EAAMc,MAAQ,EACZ,cAAC,EAAD,CAAaI,QAASlB,EAAM6B,aAC5B,cAACC,EAAD,U,kBCPLC,EAbI,SAAC/B,GAChB,OACI,eAACC,EAAA,EAAD,CAAMC,MAAI,EAAV,UACI,cAAC8B,EAAA,EAAD,CAASC,MAAM,uBAAuBC,UAAU,SAAhD,SACA,cAACC,EAAA,EAAD,CAAQC,QAASpC,EAAMqC,KAAMC,SAAUtC,EAAMkB,YAE7C,uBACClB,EAAMqC,KAAO,YAAc,iB,oCCkBzBE,EAzBM,SAAEvC,GACnB,OACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACI,eAACqC,EAAA,EAAD,CAAarB,QAAQ,SAArB,UACI,cAACsB,EAAA,EAAD,CAAYC,GAAG,aAAf,yBAGA,eAACC,EAAA,EAAD,CACIC,QAAQ,aACRF,GAAG,OACHG,MAAQ7C,EAAM8C,KACdC,aAAe/C,EAAMgD,QACrBV,SAAWtC,EAAMkB,QALrB,UAOQ,cAAC+B,EAAA,EAAD,CAAUJ,MAAO,gBAAjB,2BACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,SAAjB,oBACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,UAAjB,sBACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,OAAjB,wBACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,QAAjB,kC,SCcTK,EAhCM,SAAElD,GAiBnB,OACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGG,MAAO,CAAC6C,WAAY,QAAtC,SACI,cAACC,EAAA,EAAD,CACIL,aAAc,IACdM,iBAAkBrD,EAAMsD,KACxBC,kBAAgB,yBAEhBC,MAtBE,CACV,CACIX,MAAO,EACPY,MAAO,OAEX,CACIZ,MAAO,GACPY,MAAO,QAEX,CACIZ,MAAO,IACPY,MAAO,UAYHC,kBAAkB,KAClBpB,SAAUtC,EAAM2D,a,kBCXjBC,EAdS,SAAE5D,GACtB,OACI,cAAC6D,EAAA,EAAD,CAGAC,KAAM9D,EAAM8D,KACZC,QAAS/D,EAAMgE,OACfT,kBAAgB,yBALhB,SAOI,cAAC,IAAD,CAAc9C,MAAOT,EAAMS,MAAO6B,SAAUtC,EAAM2D,a,iBC0J/CM,MAzJf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNpD,EADM,KACCqD,EADD,OAE6BD,mBAAS,KAFtC,mBAENE,EAFM,KAESC,EAFT,OAGqBH,mBAAS,iBAH9B,mBAGNI,EAHM,KAGKC,EAHL,OAImBL,oBAAS,GAJ5B,mBAINM,EAJM,KAIIC,EAJJ,OAKqBP,mBAAS,IAL9B,mBAKNQ,EALM,KAKKC,EALL,OAM6BT,mBAAS,IANtC,mBAMNU,EANM,KAMSC,EANT,OAO+BX,oBAAS,GAPxC,mBAONY,EAPM,KAOUC,EAPV,OAQuCb,oBAAS,GARhD,mBAQNc,EARM,KAQcC,EARd,KAUPC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAW,MAGnBC,UAAW,CACTF,KAAMG,IAAO,MAGfC,KAAMlB,EAAW,OAAS,WAmCxBmB,EAAwB,WAC5BZ,GAAmBD,IAGfc,EAA4B,WAChCX,GAAuBD,IAWzB,OACE,cAACa,EAAA,EAAD,CAAeX,MAAOA,EAAtB,SACE,cAACY,EAAA,EAAD,CAAO1F,UAAU,MAAjB,SACE,eAACH,EAAA,EAAD,CAAMuB,WAAS,EAACC,QAAS,EAAGrB,UAAU,WAAtC,UAEE,eAACH,EAAA,EAAD,CAAMuB,WAAS,EAACtB,MAAI,EAACuB,QAAS,EAA9B,UAEE,cAAC,EAAD,CACEhB,MAAOiE,EACP/D,KAAMyD,EACNvD,QAASyD,EACTxD,MAAOA,EACPN,WAAYoE,EACZvE,QAAQ,cAEV,cAAC,EAAD,CACEqB,SA9DO,WACjByC,EAASrD,EAAQ,IA8DPa,SA3DO,WACjBwC,EAASrD,EAAQ,IA2DPe,WAxDS,WACnBsC,EAAS,IAwDCrD,MAAOA,OAKX,eAACb,EAAA,EAAD,CAAMuB,WAAS,EAACtB,MAAI,EAACuB,QAAS,EAAGrB,UAAU,WAA3C,UACE,cAAC,EAAD,CACEiC,KAAMmC,EACNtD,QA7DW,WACrBuD,GAAaD,GACbG,EAAa,IACbE,EAAiB,OA4DT,cAAC,EAAD,CACE/B,KAAOwB,EACPpD,QA3Dc,SAAC6E,GACzBxB,EAAawB,EAAMC,OAAOnD,QA2DhBG,QAAUsB,IAGd,cAACrE,EAAA,EAAD,CAAMuB,WAAS,EAACtB,MAAI,EAACuB,QAAS,EAAGrB,UAAU,aAA3C,SAEE,cAAC,EAAD,CACEkD,KA9DM,SAACT,GACjB,MAAM,GAAN,OAAUA,IA8DAc,QA3De,SAACoC,EAAOE,GACjC5B,EAAiB4B,QA6DX,eAAChG,EAAA,EAAD,CAAMuB,WAAS,EAACtB,MAAI,EAACuB,QAAS,EAAGrB,UAAU,eAA3C,UACA,cAAC,EAAD,CACE0D,KAAOgB,EACPrE,MAAQiE,EACRf,QAtDkB,SAAClD,GAC3BkE,EAAalE,EAAMyF,MAsDXlC,OAAS2B,IAEX,cAAC,EAAD,CACE7B,KAAOkB,EACPvE,MAAQmE,EACRjB,QAxDiB,SAAClD,GAC1BoE,EAAiBpE,EAAMyF,MAwDflC,OAAS4B,IAET,cAAC3F,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAACc,EAAA,EAAD,CACIG,QAAQ,YAGRgF,UAAY,cAAC,IAAD,CAAU7F,MAAO,CAACG,MAAM,GAAD,OAAKiE,MACxCzD,QAAU0E,EALd,uBAEQ,UAMZ,cAAC1F,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAACc,EAAA,EAAD,CACIG,QAAQ,YAGRgF,UAAY,cAAC,IAAD,CAAU7F,MAAO,CAACG,MAAM,GAAD,OAAKmE,MACxC3D,QAAU2E,EALd,6BAEQ,8BC7ITQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,eAAe,SAMrCZ,M","file":"static/js/main.4ccf16ec.chunk.js","sourcesContent":["import React from 'react'\nimport {Grid} from '@material-ui/core'\nconst BigNumber = (props) => {\n    return (\n        <Grid item xs={12} className={props.classes} style={{backgroundColor: `${props.background}`}}>\n            <span style={{color: `${props.color}`, fontSize: (props.size +'px'), fontFamily: `${props.fontFam}`}} >\n                {props.state}\n            </span>\n        </Grid>\n    )\n}\n\nexport default BigNumber\n","import React from 'react'\nimport {Button} from '@material-ui/core'\nconst AddButton = (props) => {\n    return (\n        <Button onClick={props.clicked} variant='contained' color='primary'>\n            Add\n        </Button>\n    )\n}\n\nexport default AddButton\n","import React from 'react'\nimport {Button} from '@material-ui/core'\n\nconst SubtractButton = (props) => {\n    return (\n        <Button onClick={props.clicked} variant='contained' color='secondary'>\n            Subtract\n        </Button>\n    )\n}\n\nexport default SubtractButton\n","import React from 'react'\nimport {Button} from '@material-ui/core'\n\nconst SubtractButton = (props) => {\n    return (\n        <Button onClick={props.clicked} variant='contained' color='secondary' disabled>\n            Subtract\n        </Button>\n    )\n}\n\nexport default SubtractButton","import React from 'react'\nimport {Button} from '@material-ui/core'\n\nconst ResetButton = (props) => {\n    return (\n        <Button onClick={props.clicked}  variant='contained' color='default'> \n            Reset\n        </Button>\n    )\n}\n\nexport default ResetButton\n","import React from 'react'\nimport {Button} from '@material-ui/core'\n\nconst ResetButton = (props) => {\n    return (\n        <Button onClick={props.clicked}  variant='contained' color='default' disabled> \n            Reset\n        </Button>\n    )\n}\n\nexport default ResetButton","import React from 'react'\nimport { Grid } from '@material-ui/core'\n\nimport AddButton from '../Buttons/AddButton'\nimport SubtractButton from '../Buttons/SubtractButton'\nimport SubDisabledButton from '../Buttons/SubDisabledButton'\nimport ResetButton from '../Buttons/ResetButton'\nimport ResetDisabledButton from '../Buttons/ResetDisabledButton'\n\nconst ButtonBar = (props) => {\n    return (\n        <Grid container item spacing={3} className=\"ButtonBar\">\n            <Grid item>\n                <AddButton clicked={props.addClick} />\n            </Grid>\n            <Grid item >\n                { props.state > 0 ? \n                    <SubtractButton clicked={props.subClick} />  : \n                    <SubDisabledButton />\n                }     \n            </Grid>\n            <Grid item>\n                { props.state > 0 ?\n                    <ResetButton clicked={props.resetClick}/> :\n                    <ResetDisabledButton />\n                }\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default ButtonBar\n","import React from 'react'\n\nimport { Grid, Switch, Tooltip } from '@material-ui/core'\n\nconst DarkToggle = (props) => {\n    return (\n        <Grid item>\n            <Tooltip title='Resets Custom Colors' placement='bottom'>\n            <Switch checked={props.mode} onChange={props.clicked}/>\n            </Tooltip>\n            <br />\n            {props.mode ? 'Dark Mode' : 'Light Mode'}\n            \n        </Grid>\n    )\n}\n\nexport default DarkToggle\n","import React from 'react'\n\nimport { FormControl, Grid, InputLabel, MenuItem, Select} from '@material-ui/core'\n\nconst FontSelector = ( props ) => {\n    return (\n        <Grid item xs={6}>\n            <FormControl variant='filled' >\n                <InputLabel id='changeFont'>\n                    Change Font\n                </InputLabel>\n                <Select\n                    labelId='changeFont'\n                    id='font'\n                    value={ props.font}\n                    defaultValue={ props.default }\n                    onChange={ props.clicked }\n                    >\n                        <MenuItem value={'Dimitri-Swank'}>Dimitri Swank</MenuItem>\n                        <MenuItem value={'Roboto'}>Roboto</MenuItem>\n                        <MenuItem value={'ZenDots'}>Zen Dots</MenuItem>\n                        <MenuItem value={'Arvo'} > - Arvo - </MenuItem>\n                        <MenuItem value={'Arial'}>Arial Black</MenuItem>\n                </Select>\n            </FormControl>\n        </Grid>\n    )\n}\n\nexport default FontSelector\n","import React from 'react'\n\nimport { Grid, Slider } from '@material-ui/core'\n\nconst SizeSelector = ( props ) => {\n\n    const marks = [\n        {\n            value: 0,\n            label: '0px',\n        },\n        { \n            value: 50,\n            label: '50px'\n        },\n        {\n            value: 100,\n            label: '100px',\n        },\n    ];\n\n    return (\n        <Grid item xs={9} style={{paddingTop: '50px'}}>\n            <Slider\n                defaultValue={100}\n                getAriaValueText={props.aria}\n                aria-labelledby=\"discrete-slider-always\"\n                // step={25}\n                marks={ marks }\n                valueLabelDisplay=\"on\"\n                onChange={props.changed}\n            />\n        </Grid>\n    )\n}\n\nexport default SizeSelector\n","import React from 'react'\n\nimport { Dialog } from '@material-ui/core'\nimport { SketchPicker } from 'react-color'\n\nconst ColorPickDialog = ( props ) => {\n    return (\n        <Dialog\n        //fullWidth={fullWidth}\n        //maxWidth={maxWidth}\n        open={props.open}\n        onClose={props.closed}\n        aria-labelledby=\"max-width-dialog-title\"\n        >\n            <SketchPicker color={props.color} onChange={props.changed}/>\n        </Dialog>\n    )\n}\n\nexport default ColorPickDialog\n","import React, { useState } from 'react'\n\nimport { Button, createMuiTheme, Grid, Paper, ThemeProvider } from '@material-ui/core'\nimport { deepPurple, purple } from '@material-ui/core/colors'\nimport './App.css';\n\nimport BigNumber from './Components/MainSections/BigNumber'\nimport ButtonBar from './Components/MainSections/ButtonBar'\nimport DarkToggle from './Components/MainSections/DarkToggle'\nimport FontSelector from './Components/MainSections/FontSelector'\nimport SizeSelector from './Components/MainSections/SizeSelector'\nimport ColorPickDialog from './HOCs/ColorPickDialog'\n\nimport StopIcon from '@material-ui/icons/Stop';\n\nfunction App() {\n  const [state, setState] = useState(0)\n  const [fontSizeState, setFontSizeState] = useState(100)\n  const [fontStyle, setFontStyle] = useState('Dimitri-Swank')\n  const [darkMode, setDarkMode] = useState(false)\n  const [fontColor, setFontColor] = useState('')\n  const [bkgroundColor, setBkGroundColor] = useState('')\n  const [fontdialogOpen, setFontDialogOpen] = useState(false)\n  const [bkgrounddialogOpen, setbkgroundDialogOpen] = useState(false)\n  \n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: deepPurple[500],\n        // \n      },\n      secondary: {\n        main: purple[500],\n        // \n      },\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n\n  const addHandler = () => {\n    setState(state + 1)\n  }\n\n  const subHandler = () => {\n    setState(state - 1)\n  }\n\n  const resetHandler = () => {\n    setState(0)\n  }\n\n  const darkModeToggle = () => {\n    setDarkMode(!darkMode)\n    setFontColor('')\n    setBkGroundColor('')\n  }\n\n  const changeFontHandler = (event) => {\n    setFontStyle(event.target.value)\n  }\n\n  const valuetext = (value) => {\n    return `${value}`\n  }\n\n  const setFontSizeHandler = (event, newValue) => {\n    setFontSizeState(newValue)\n  }\n\n  const fontColorDialogToggle = () => {\n    setFontDialogOpen(!fontdialogOpen)\n  }\n\n  const bkgroundColorDialogToggle = () => {\n    setbkgroundDialogOpen(!bkgrounddialogOpen)\n  }\n\n  const setFontColorHandler = (color) => {\n    setFontColor(color.hex)\n  }\n\n  const setbkgroundHandler = (color) => {\n    setBkGroundColor(color.hex)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"App\" >\n        <Grid container spacing={4} className='mainGrid'>\n          \n          <Grid container item spacing={4}>\n            \n            <BigNumber \n              color={fontColor} \n              size={fontSizeState} \n              fontFam={fontStyle} \n              state={state}\n              background={bkgroundColor}\n              classes='bigNumber'\n            />\n            <ButtonBar \n              addClick={addHandler}\n              subClick={subHandler}\n              resetClick={resetHandler}\n              state={state}\n            />\n\n          </Grid>\n\n          <Grid container item spacing={3} className=\"StyleBar\">\n            <DarkToggle \n              mode={darkMode}\n              clicked={darkModeToggle}\n            />\n            <FontSelector \n              font={ fontStyle }\n              clicked={ changeFontHandler }\n              default={ fontStyle }\n            />\n\n          <Grid container item spacing={3} className='numberSize'>\n            \n            <SizeSelector \n              aria={ valuetext }\n              changed={ setFontSizeHandler }\n            />\n          </Grid>\n          <Grid container item spacing={3} className='colorButtons'>\n          <ColorPickDialog \n            open={ fontdialogOpen }\n            color={ fontColor }\n            changed={ setFontColorHandler }\n            closed={ fontColorDialogToggle }\n          />\n          <ColorPickDialog \n            open={ bkgrounddialogOpen }\n            color={ bkgroundColor }\n            changed={ setbkgroundHandler }\n            closed={ bkgroundColorDialogToggle }\n          />\n            <Grid item>\n                <Button \n                    variant=\"contained\"\n                    key='font'\n                    //color=\"primary\"\n                    startIcon={ <StopIcon style={{color: `${fontColor}`}}/> }\n                    onClick={ fontColorDialogToggle }\n                >Font Color</Button>\n            </Grid>\n            <Grid item>\n                <Button \n                    variant=\"contained\"\n                    key='Background'\n                    //color=\"secondary\"\n                    startIcon={ <StopIcon style={{color: `${bkgroundColor}`}}/> }\n                    onClick={ bkgroundColorDialogToggle }\n                    \n                >BackGround Color</Button>\n            </Grid>\n          </Grid>\n            </Grid>\n      </Grid>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}