{"ast":null,"code":"var _jsxFileName = \"/Users/billy.moore/Desktop/Programming/dev2/stream-counter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, createMuiTheme, Grid, Paper, ThemeProvider } from '@material-ui/core';\nimport { deepPurple, purple } from '@material-ui/core/colors';\nimport './App.css';\nimport BigNumber from './Components/MainSections/BigNumber';\nimport ButtonBar from './Components/MainSections/ButtonBar';\nimport DarkToggle from './Components/MainSections/DarkToggle';\nimport FontSelector from './Components/MainSections/FontSelector';\nimport SizeSelector from './Components/MainSections/SizeSelector';\nimport ColorPickDialog from './HOCs/ColorPickDialog';\nimport StopIcon from '@material-ui/icons/Stop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState(0);\n  const [fontSizeState, setFontSizeState] = useState(100);\n  const [fontStyle, setFontStyle] = useState('Dimitri-Swank');\n  const [darkMode, setDarkMode] = useState(false);\n  const [fontColor, setFontColor] = useState('');\n  const [bkgroundColor, setBkGroundColor] = useState('');\n  const [fontdialogOpen, setFontDialogOpen] = useState(false);\n  const [bkgrounddialogOpen, setbkgroundDialogOpen] = useState(false);\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: deepPurple[500] // \n\n      },\n      secondary: {\n        main: purple[500] // \n\n      },\n      type: darkMode ? 'dark' : 'light'\n    }\n  });\n\n  const addHandler = () => {\n    setState(state + 1);\n  };\n\n  const subHandler = () => {\n    setState(state - 1);\n  };\n\n  const resetHandler = () => {\n    setState(0);\n  };\n\n  const darkModeToggle = () => {\n    setDarkMode(!darkMode);\n    setFontColor('');\n    setBkGroundColor('');\n  };\n\n  const changeFontHandler = event => {\n    setFontStyle(event.target.value);\n  };\n\n  const valuetext = value => {\n    return `${value}`;\n  };\n\n  const setFontSizeHandler = (event, newValue) => {\n    setFontSizeState(newValue);\n  };\n\n  const fontColorDialogToggle = () => {\n    setFontDialogOpen(!fontdialogOpen);\n  };\n\n  const bkgroundColorDialogToggle = () => {\n    setbkgroundDialogOpen(!bkgrounddialogOpen);\n  };\n\n  const setFontColorHandler = color => {\n    setFontColor(color.hex);\n  };\n\n  const setbkgroundHandler = color => {\n    setBkGroundColor(color.hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        className: \"mainGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(BigNumber, {\n            color: fontColor,\n            size: fontSizeState,\n            fontFam: fontStyle,\n            state: state,\n            background: bkgroundColor,\n            classes: \"bigNumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonBar, {\n            addClick: addHandler,\n            subClick: subHandler,\n            resetClick: resetHandler,\n            state: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 3,\n          className: \"StyleBar\",\n          children: [/*#__PURE__*/_jsxDEV(DarkToggle, {\n            mode: darkMode,\n            clicked: darkModeToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FontSelector, {\n            font: fontStyle,\n            clicked: changeFontHandler,\n            default: fontStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            spacing: 3,\n            className: \"numberSize\",\n            children: /*#__PURE__*/_jsxDEV(SizeSelector, {\n              aria: valuetext,\n              changed: setFontSizeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            spacing: 3,\n            className: \"colorButtons\",\n            children: [/*#__PURE__*/_jsxDEV(ColorPickDialog, {\n              open: fontdialogOpen,\n              color: fontColor,\n              changed: setFontColorHandler,\n              closed: fontColorDialogToggle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ColorPickDialog, {\n              open: bkgrounddialogOpen,\n              color: bkgroundColor,\n              changed: setbkgroundHandler,\n              closed: bkgroundColorDialogToggle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                //color=\"primary\"\n                startIcon: /*#__PURE__*/_jsxDEV(StopIcon, {\n                  style: {\n                    color: `${fontColor}`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 33\n                }, this),\n                onClick: fontColorDialogToggle,\n                children: \"Font Color\"\n              }, 'font', false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                //color=\"secondary\"\n                startIcon: /*#__PURE__*/_jsxDEV(StopIcon, {\n                  style: {\n                    color: `${bkgroundColor}`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 33\n                }, this),\n                onClick: bkgroundColorDialogToggle,\n                children: \"BackGround Color\"\n              }, 'Background', false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RstTaZDmW5TyPPmxY4NWVQvcEqM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/billy.moore/Desktop/Programming/dev2/stream-counter/src/App.js"],"names":["React","useState","Button","createMuiTheme","Grid","Paper","ThemeProvider","deepPurple","purple","BigNumber","ButtonBar","DarkToggle","FontSelector","SizeSelector","ColorPickDialog","StopIcon","App","state","setState","fontSizeState","setFontSizeState","fontStyle","setFontStyle","darkMode","setDarkMode","fontColor","setFontColor","bkgroundColor","setBkGroundColor","fontdialogOpen","setFontDialogOpen","bkgrounddialogOpen","setbkgroundDialogOpen","theme","palette","primary","main","secondary","type","addHandler","subHandler","resetHandler","darkModeToggle","changeFontHandler","event","target","value","valuetext","setFontSizeHandler","newValue","fontColorDialogToggle","bkgroundColorDialogToggle","setFontColorHandler","color","hex","setbkgroundHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { Button, createMuiTheme, Grid, Paper, ThemeProvider } from '@material-ui/core'\nimport { deepPurple, purple } from '@material-ui/core/colors'\nimport './App.css';\n\nimport BigNumber from './Components/MainSections/BigNumber'\nimport ButtonBar from './Components/MainSections/ButtonBar'\nimport DarkToggle from './Components/MainSections/DarkToggle'\nimport FontSelector from './Components/MainSections/FontSelector'\nimport SizeSelector from './Components/MainSections/SizeSelector'\nimport ColorPickDialog from './HOCs/ColorPickDialog'\n\nimport StopIcon from '@material-ui/icons/Stop';\n\nfunction App() {\n  const [state, setState] = useState(0)\n  const [fontSizeState, setFontSizeState] = useState(100)\n  const [fontStyle, setFontStyle] = useState('Dimitri-Swank')\n  const [darkMode, setDarkMode] = useState(false)\n  const [fontColor, setFontColor] = useState('')\n  const [bkgroundColor, setBkGroundColor] = useState('')\n  const [fontdialogOpen, setFontDialogOpen] = useState(false)\n  const [bkgrounddialogOpen, setbkgroundDialogOpen] = useState(false)\n  \n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: deepPurple[500],\n        // \n      },\n      secondary: {\n        main: purple[500],\n        // \n      },\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n\n  const addHandler = () => {\n    setState(state + 1)\n  }\n\n  const subHandler = () => {\n    setState(state - 1)\n  }\n\n  const resetHandler = () => {\n    setState(0)\n  }\n\n  const darkModeToggle = () => {\n    setDarkMode(!darkMode)\n    setFontColor('')\n    setBkGroundColor('')\n  }\n\n  const changeFontHandler = (event) => {\n    setFontStyle(event.target.value)\n  }\n\n  const valuetext = (value) => {\n    return `${value}`\n  }\n\n  const setFontSizeHandler = (event, newValue) => {\n    setFontSizeState(newValue)\n  }\n\n  const fontColorDialogToggle = () => {\n    setFontDialogOpen(!fontdialogOpen)\n  }\n\n  const bkgroundColorDialogToggle = () => {\n    setbkgroundDialogOpen(!bkgrounddialogOpen)\n  }\n\n  const setFontColorHandler = (color) => {\n    setFontColor(color.hex)\n  }\n\n  const setbkgroundHandler = (color) => {\n    setBkGroundColor(color.hex)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"App\" >\n        <Grid container spacing={4} className='mainGrid'>\n          \n          <Grid container item spacing={4}>\n            \n            <BigNumber \n              color={fontColor} \n              size={fontSizeState} \n              fontFam={fontStyle} \n              state={state}\n              background={bkgroundColor}\n              classes='bigNumber'\n            />\n            <ButtonBar \n              addClick={addHandler}\n              subClick={subHandler}\n              resetClick={resetHandler}\n              state={state}\n            />\n\n          </Grid>\n\n          <Grid container item spacing={3} className=\"StyleBar\">\n            <DarkToggle \n              mode={darkMode}\n              clicked={darkModeToggle}\n            />\n            <FontSelector \n              font={ fontStyle }\n              clicked={ changeFontHandler }\n              default={ fontStyle }\n            />\n\n          <Grid container item spacing={3} className='numberSize'>\n            \n            <SizeSelector \n              aria={ valuetext }\n              changed={ setFontSizeHandler }\n            />\n          </Grid>\n          <Grid container item spacing={3} className='colorButtons'>\n          <ColorPickDialog \n            open={ fontdialogOpen }\n            color={ fontColor }\n            changed={ setFontColorHandler }\n            closed={ fontColorDialogToggle }\n          />\n          <ColorPickDialog \n            open={ bkgrounddialogOpen }\n            color={ bkgroundColor }\n            changed={ setbkgroundHandler }\n            closed={ bkgroundColorDialogToggle }\n          />\n            <Grid item>\n                <Button \n                    variant=\"contained\"\n                    key='font'\n                    //color=\"primary\"\n                    startIcon={ <StopIcon style={{color: `${fontColor}`}}/> }\n                    onClick={ fontColorDialogToggle }\n                >Font Color</Button>\n            </Grid>\n            <Grid item>\n                <Button \n                    variant=\"contained\"\n                    key='Background'\n                    //color=\"secondary\"\n                    startIcon={ <StopIcon style={{color: `${bkgroundColor}`}}/> }\n                    onClick={ bkgroundColorDialogToggle }\n                    \n                >BackGround Color</Button>\n            </Grid>\n          </Grid>\n            </Grid>\n      </Grid>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}