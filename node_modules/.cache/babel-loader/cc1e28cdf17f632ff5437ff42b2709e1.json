{"ast":null,"code":"var _jsxFileName = \"/Users/billy.moore/Desktop/Programming/dev2/stream-counter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createMuiTheme, Grid, MenuItem, FormControl, InputLabel, Paper, Select, Slider, Switch, ThemeProvider } from '@material-ui/core';\nimport { deepPurple, purple } from '@material-ui/core/colors';\nimport './App.css';\nimport AddButton from './Components/Buttons/AddButton';\nimport SubtractButton from './Components/Buttons/SubtractButton';\nimport SubDisabledButton from './Components/Buttons/SubDisabledButton';\nimport ResetButton from './Components/Buttons/ResetButton';\nimport ResetDisabledButton from './Components/Buttons/ResetDisabledButton';\nimport { TwitterPicker } from 'react-color';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState(0);\n  const [fontSizeState, setFontSizeState] = useState({\n    fontSize: '150px'\n  });\n  const [fontStyle, setFontStyle] = useState('DimitriSwank');\n  const [darkMode, setDarkMode] = useState(false);\n  const [fontColor, setFontColor] = useState({\n    color: ''\n  });\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: deepPurple[500]\n      },\n      secondary: {\n        main: purple[500]\n      },\n      type: darkMode ? 'dark' : 'light'\n    }\n  });\n  const marks = [{\n    value: 1,\n    label: '1px'\n  }, {\n    value: 50,\n    label: '50px'\n  }, {\n    value: 100,\n    label: '100px'\n  }];\n\n  const addHandler = () => {\n    setState(state + 1);\n  };\n\n  const subHandler = () => {\n    setState(state - 1);\n  };\n\n  const resetHandler = () => {\n    setState(0);\n  };\n\n  const darkModeToggle = () => {\n    setDarkMode(!darkMode);\n    setFontColor({\n      color: ''\n    });\n  };\n\n  const changeFontHandler = event => {\n    setFontStyle(event.target.value);\n  };\n\n  const valuetext = value => {\n    return `${value}`;\n  };\n\n  const setFontSizeHandler = valuetext => {\n    console.log(valuetext);\n    setFontSizeState(valuetext);\n  };\n\n  const setColorHandler = color => {\n    setFontColor({\n      color: color.hex\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        className: \"mainGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: fontStyle,\n          style: {\n            height: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontColor,\n              fontSize: fontSizeState + 'px'\n            },\n            children: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 3,\n          className: \"ButtonBar\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(AddButton, {\n              clicked: addHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: state > 0 ? /*#__PURE__*/_jsxDEV(SubtractButton, {\n              clicked: subHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(SubDisabledButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: state > 0 ? /*#__PURE__*/_jsxDEV(ResetButton, {\n              clicked: resetHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(ResetDisabledButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 3,\n          className: \"StyleBar\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              checked: darkMode,\n              onChange: darkModeToggle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), darkMode ? 'Dark Mode' : 'Light Mode']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"changeFont\",\n                children: \"Change Font\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"changeFont\",\n                id: \"font\",\n                value: fontStyle,\n                onChange: changeFontHandler,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'DimitriSwank',\n                  children: \"Dimitri Swank\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'Roboto',\n                  children: \"Roboto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'ZenDots',\n                  children: \"Zen Dots\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'Arvo',\n                  children: \" - Arvo - \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'Arial',\n                  children: \"Arial Black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 9,\n            style: {\n              paddingTop: '50px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              defaultValue: 100,\n              getAriaValueText: valuetext,\n              \"aria-labelledby\": \"discrete-slider-always\" // step={25}\n              ,\n              marks: marks,\n              valueLabelDisplay: \"on\",\n              onChange: setFontSizeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(TwitterPicker, {\n              color: fontColor,\n              onChange: setColorHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Y7s+iSrIgV3l9iqK3VcG87b1mK4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/billy.moore/Desktop/Programming/dev2/stream-counter/src/App.js"],"names":["React","useState","createMuiTheme","Grid","MenuItem","FormControl","InputLabel","Paper","Select","Slider","Switch","ThemeProvider","deepPurple","purple","AddButton","SubtractButton","SubDisabledButton","ResetButton","ResetDisabledButton","TwitterPicker","App","state","setState","fontSizeState","setFontSizeState","fontSize","fontStyle","setFontStyle","darkMode","setDarkMode","fontColor","setFontColor","color","theme","palette","primary","main","secondary","type","marks","value","label","addHandler","subHandler","resetHandler","darkModeToggle","changeFontHandler","event","target","valuetext","setFontSizeHandler","console","log","setColorHandler","hex","height","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { createMuiTheme, Grid, MenuItem, FormControl, InputLabel, Paper, Select, Slider, Switch, ThemeProvider } from '@material-ui/core'\nimport { deepPurple, purple } from '@material-ui/core/colors'\nimport './App.css';\n\nimport AddButton from './Components/Buttons/AddButton'\nimport SubtractButton from './Components/Buttons/SubtractButton'\nimport SubDisabledButton from './Components/Buttons/SubDisabledButton'\nimport ResetButton from './Components/Buttons/ResetButton'\nimport ResetDisabledButton from './Components/Buttons/ResetDisabledButton'\nimport { TwitterPicker } from 'react-color'\n\nfunction App() {\n  const [state, setState] = useState(0)\n  const [fontSizeState, setFontSizeState] = useState({fontSize: '150px'})\n  const [fontStyle, setFontStyle] = useState('DimitriSwank')\n  const [darkMode, setDarkMode] = useState(false)\n  const [fontColor, setFontColor] = useState({color: ''})\n  \n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: deepPurple[500],\n      },\n      secondary: {\n        main: purple[500],\n      },\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n  const marks = [\n    {\n      value: 1,\n      label: '1px',\n    },\n    { \n      value: 50,\n      label: '50px'\n    },\n    {\n      value: 100,\n      label: '100px',\n    },\n  ];\n\n  const addHandler = () => {\n    setState(state + 1)\n  }\n\n  const subHandler = () => {\n    setState(state - 1)\n  }\n\n  const resetHandler = () => {\n    setState(0)\n  }\n\n  const darkModeToggle = () => {\n    setDarkMode(!darkMode)\n    setFontColor({color: ''})\n  }\n\n  const changeFontHandler = (event) => {\n    setFontStyle(event.target.value)\n  }\n\n  const valuetext = (value) => {\n    return `${value}`\n  }\n\n  const setFontSizeHandler = (valuetext) => {\n    console.log(valuetext)\n    setFontSizeState(valuetext)\n  }\n\n  const setColorHandler = (color) => {\n    setFontColor({color: color.hex})\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"App\" >\n      <Grid container spacing={4} className='mainGrid'>\n        <Grid item xs={12} className={fontStyle} style={{height: '200px'}}>\n          <span style={{fontColor, fontSize: (fontSizeState +'px')}} >\n            {state}\n          </span>\n          \n        </Grid>\n        <Grid container item spacing={3} className=\"ButtonBar\">\n          <Grid item>\n            <AddButton clicked={addHandler} />\n          </Grid>\n          <Grid item >\n            {state > 0 ? \n              <SubtractButton clicked={subHandler} />  : \n              <SubDisabledButton />\n              }     \n          </Grid>\n          <Grid item>\n            { state > 0 ?\n            <ResetButton clicked={resetHandler}/> :\n            <ResetDisabledButton />\n            }\n            </Grid>\n        </Grid>\n        <Grid container item spacing={3} className=\"StyleBar\">\n            <Grid item>\n              <Switch checked={darkMode} onChange={darkModeToggle}/>\n              <br />\n                  {darkMode ? 'Dark Mode' : 'Light Mode'}\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl variant='filled' >\n                  <InputLabel id='changeFont'>\n                      Change Font\n                  </InputLabel>\n                  <Select\n                      labelId='changeFont'\n                      id='font'\n                      value={fontStyle}\n                      onChange={changeFontHandler}\n                      \n                      >\n                      <MenuItem value={'DimitriSwank'}>Dimitri Swank</MenuItem>\n                      <MenuItem value={'Roboto'}>Roboto</MenuItem>\n                      <MenuItem value={'ZenDots'}>Zen Dots</MenuItem>\n                      <MenuItem value={'Arvo'} > - Arvo - </MenuItem>\n                      <MenuItem value={'Arial'}>Arial Black</MenuItem>\n                      \n                      </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={9} style={{paddingTop: '50px'}}>\n              <Slider\n                  defaultValue={100}\n                  getAriaValueText={valuetext}\n                  aria-labelledby=\"discrete-slider-always\"\n                  // step={25}\n                  marks={marks}\n                  valueLabelDisplay=\"on\"\n                  onChange={setFontSizeHandler}\n                />\n            </Grid>\n            <Grid item xs={8}>\n              <TwitterPicker color={fontColor} onChange={setColorHandler}/>\n            </Grid>\n            </Grid>\n      </Grid>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}