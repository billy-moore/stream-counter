{"ast":null,"code":"var _jsxFileName = \"/Users/billy.moore/Desktop/Programming/dev2/stream-counter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { purple } from '@material-ui/core/colors';\nimport './App.css';\nimport { createMuiTheme, Grid, MenuItem, FormControl, InputLabel, Paper, Select, Switch, ThemeProvider } from '@material-ui/core';\nimport Number from './Components/Number';\nimport AddButton from './Components/Buttons/AddButton';\nimport SubtractButton from './Components/Buttons/SubtractButton';\nimport SubDisabledButton from './Components/Buttons/SubDisabledButton';\nimport ResetButton from './Components/Buttons/ResetButton';\nimport ResetDisabledButton from './Components/Buttons/ResetDisabledButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState(0);\n  const [fontStyle, setFontStyle] = useState('DimitriSwank');\n  const [darkMode, setDarkMode] = useState(false);\n  const classes = useStyles();\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: purple[500]\n      },\n      type: darkMode ? 'dark' : 'light'\n    }\n  });\n\n  const addHandler = () => {\n    setState(state + 1);\n  };\n\n  const subHandler = () => {\n    setState(state - 1);\n  };\n\n  const resetHandler = () => {\n    setState(0);\n  };\n\n  const changeFontHandler = event => {\n    setFontStyle(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const darkModeToggle = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: fontStyle,\n          style: {\n            height: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Number, {\n            number: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 3,\n          className: \"ButtonBar\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(AddButton, {\n              clicked: addHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: state > 0 ? /*#__PURE__*/_jsxDEV(SubtractButton, {\n              clicked: subHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(SubDisabledButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: state > 0 ? /*#__PURE__*/_jsxDEV(ResetButton, {\n              clicked: resetHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(ResetDisabledButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 3,\n          className: \"StyleBar\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"changeFont\",\n                children: \"Change Font\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"changeFont\",\n                id: \"font\",\n                value: fontStyle,\n                onChange: changeFontHandler,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'DimitriSwank',\n                  children: \"Dimitri Swank\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'Roboto',\n                  children: \"Roboto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'ZenDots',\n                  children: \"Zen Dots\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              checked: darkMode,\n              onChange: darkModeToggle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this), darkMode ? 'Dark Mode' : 'Light Mode']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HEs17nDpkXQXegPz8gKB7/uKfbo=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/billy.moore/Desktop/Programming/dev2/stream-counter/src/App.js"],"names":["React","useState","makeStyles","purple","createMuiTheme","Grid","MenuItem","FormControl","InputLabel","Paper","Select","Switch","ThemeProvider","Number","AddButton","SubtractButton","SubDisabledButton","ResetButton","ResetDisabledButton","useStyles","theme","formControl","margin","spacing","minWidth","App","state","setState","fontStyle","setFontStyle","darkMode","setDarkMode","classes","palette","primary","main","type","addHandler","subHandler","resetHandler","changeFontHandler","event","target","value","console","log","darkModeToggle","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { purple } from '@material-ui/core/colors'\nimport './App.css';\nimport { createMuiTheme, Grid, MenuItem, FormControl, InputLabel, Paper, Select, Switch, ThemeProvider } from '@material-ui/core'\nimport Number from './Components/Number'\nimport AddButton from './Components/Buttons/AddButton'\nimport SubtractButton from './Components/Buttons/SubtractButton'\nimport SubDisabledButton from './Components/Buttons/SubDisabledButton'\nimport ResetButton from './Components/Buttons/ResetButton'\nimport ResetDisabledButton from './Components/Buttons/ResetDisabledButton'\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    }\n}));\n\nfunction App() {\n  const [state, setState] = useState(0)\n  const [fontStyle, setFontStyle] = useState('DimitriSwank')\n  const [darkMode, setDarkMode] = useState(false)\n  const classes = useStyles()\n  \n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: purple[500],\n      },\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n  const addHandler = () => {\n    setState(state + 1)\n  }\n\n  const subHandler = () => {\n    setState(state - 1)\n  }\n\n  const resetHandler = () => {\n    setState(0)\n  }\n\n  const changeFontHandler = (event) => {\n    setFontStyle(event.target.value)\n    console.log(event.target.value)\n  }\n\n  const darkModeToggle = () => {\n    setDarkMode(!darkMode)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"App\" >\n      <Grid container spacing={4}>\n        <Grid item xs={12} className={fontStyle} style={{height: '200px'}}>\n          <Number number={state} />\n        </Grid>\n        <Grid container item spacing={3} className=\"ButtonBar\">\n          <Grid item>\n            <AddButton clicked={addHandler} />\n          </Grid>\n          <Grid item >\n            {state > 0 ? \n              <SubtractButton clicked={subHandler} />  : \n              <SubDisabledButton />\n              }     \n          </Grid>\n          <Grid item>\n            { state > 0 ?\n            <ResetButton clicked={resetHandler}/> :\n            <ResetDisabledButton />\n            }\n            </Grid>\n        </Grid>\n        <Grid container item spacing={3} className=\"StyleBar\">\n            <Grid item>\n                <FormControl className={classes.formControl}>\n                  <InputLabel id='changeFont'>\n                      Change Font\n                  </InputLabel>\n                  <Select\n                      labelId='changeFont'\n                      id='font'\n                      value={fontStyle}\n                      onChange={changeFontHandler}\n                      >\n                      <MenuItem value={'DimitriSwank'}>Dimitri Swank</MenuItem>\n                      <MenuItem value={'Roboto'}>Roboto</MenuItem>\n                      <MenuItem value={'ZenDots'}>Zen Dots</MenuItem>\n                      </Select>\n                </FormControl>\n            </Grid>\n            <Grid item>\n            <Switch checked={darkMode} onChange={darkModeToggle}/>\n                {darkMode ? 'Dark Mode' : 'Light Mode'}\n            </Grid>\n        </Grid>\n      </Grid>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}