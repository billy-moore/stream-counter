{"ast":null,"code":"var _jsxFileName = \"/Users/billy.moore/Desktop/Programming/dev2/stream-counter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createMuiTheme, Grid, Paper, ThemeProvider } from '@material-ui/core';\nimport { deepPurple, purple } from '@material-ui/core/colors';\nimport './App.css';\nimport BigNumber from './Components/MainSections/BigNumber';\nimport ButtonBar from './Components/MainSections/ButtonBar';\nimport DarkToggle from './Components/MainSections/DarkToggle';\nimport FontSelector from './Components/MainSections/FontSelector';\nimport SizeSelector from './Components/MainSections/SizeSelector';\nimport ColorSelectorBar from './Components/MainSections/ColorSelectorBar';\nimport ColorModal from './HOCs/ColorModal';\nimport { SketchPicker } from 'react-color';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState(0);\n  const [fontSizeState, setFontSizeState] = useState(100);\n  const [fontStyle, setFontStyle] = useState('DimitriSwank');\n  const [darkMode, setDarkMode] = useState(false);\n  const [fontColor, setFontColor] = useState('');\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: deepPurple[500]\n      },\n      secondary: {\n        main: purple[500]\n      },\n      type: darkMode ? 'dark' : 'light'\n    }\n  });\n  const marks = [{\n    value: 0,\n    label: '0px'\n  }, {\n    value: 50,\n    label: '50px'\n  }, {\n    value: 100,\n    label: '100px'\n  }];\n\n  const addHandler = () => {\n    setState(state + 1);\n  };\n\n  const subHandler = () => {\n    setState(state - 1);\n  };\n\n  const resetHandler = () => {\n    setState(0);\n  };\n\n  const darkModeToggle = () => {\n    setDarkMode(!darkMode);\n    setFontColor('#0000000');\n  };\n\n  const changeFontHandler = event => {\n    setFontStyle(event.target.value);\n  };\n\n  const valuetext = value => {\n    return `${value}`;\n  };\n\n  const setFontSizeHandler = (event, newValue) => {\n    setFontSizeState(newValue);\n  };\n\n  const setColorHandler = color => {\n    console.log(color.hex);\n    setFontColor(color.hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        className: \"mainGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 4,\n          className: \"topSection\",\n          children: [/*#__PURE__*/_jsxDEV(BigNumber, {\n            color: fontColor,\n            size: fontSizeState,\n            fontFam: fontStyle,\n            state: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonBar, {\n            addClick: addHandler,\n            subClick: subHandler,\n            resetClick: resetHandler,\n            state: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 3,\n          className: \"StyleBar\",\n          children: [/*#__PURE__*/_jsxDEV(DarkToggle, {\n            mode: darkMode,\n            clicked: darkModeToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FontSelector, {\n            font: fontStyle,\n            clicked: changeFontHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            spacing: 3,\n            children: /*#__PURE__*/_jsxDEV(SizeSelector, {\n              aria: valuetext,\n              marks: marks,\n              changed: setFontSizeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ColorModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ColorSelectorBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n              color: fontColor,\n              onChange: setColorHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n              color: fontColor,\n              onChange: setColorHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sbnE2V5/X2d9eR+UNmFenSjOBH8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/billy.moore/Desktop/Programming/dev2/stream-counter/src/App.js"],"names":["React","useState","createMuiTheme","Grid","Paper","ThemeProvider","deepPurple","purple","BigNumber","ButtonBar","DarkToggle","FontSelector","SizeSelector","ColorSelectorBar","ColorModal","SketchPicker","App","state","setState","fontSizeState","setFontSizeState","fontStyle","setFontStyle","darkMode","setDarkMode","fontColor","setFontColor","theme","palette","primary","main","secondary","type","marks","value","label","addHandler","subHandler","resetHandler","darkModeToggle","changeFontHandler","event","target","valuetext","setFontSizeHandler","newValue","setColorHandler","color","console","log","hex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { createMuiTheme, Grid, Paper, ThemeProvider } from '@material-ui/core'\nimport { deepPurple, purple } from '@material-ui/core/colors'\nimport './App.css';\n\nimport BigNumber from './Components/MainSections/BigNumber'\nimport ButtonBar from './Components/MainSections/ButtonBar'\nimport DarkToggle from './Components/MainSections/DarkToggle'\nimport FontSelector from './Components/MainSections/FontSelector'\nimport SizeSelector from './Components/MainSections/SizeSelector'\nimport ColorSelectorBar from './Components/MainSections/ColorSelectorBar'\n\nimport ColorModal from './HOCs/ColorModal'\n\nimport { SketchPicker } from 'react-color'\n\nfunction App() {\n  const [state, setState] = useState(0)\n  const [fontSizeState, setFontSizeState] = useState(100)\n  const [fontStyle, setFontStyle] = useState('DimitriSwank')\n  const [darkMode, setDarkMode] = useState(false)\n  const [fontColor, setFontColor] = useState('')\n  \n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: deepPurple[500],\n      },\n      secondary: {\n        main: purple[500],\n      },\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n  const marks = [\n    {\n      value: 0,\n      label: '0px',\n    },\n    { \n      value: 50,\n      label: '50px'\n    },\n    {\n      value: 100,\n      label: '100px',\n    },\n  ];\n\n  const addHandler = () => {\n    setState(state + 1)\n  }\n\n  const subHandler = () => {\n    setState(state - 1)\n  }\n\n  const resetHandler = () => {\n    setState(0)\n  }\n\n  const darkModeToggle = () => {\n    setDarkMode(!darkMode)\n    setFontColor('#0000000')\n  }\n\n  const changeFontHandler = (event) => {\n    setFontStyle(event.target.value)\n  }\n\n  const valuetext = (value) => {\n    return `${value}`\n  }\n\n  const setFontSizeHandler = (event, newValue) => {\n    setFontSizeState(newValue)\n  }\n\n  const setColorHandler = (color) => {\n    console.log(color.hex)\n    setFontColor(color.hex)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"App\" >\n        <Grid container spacing={4} className='mainGrid'>\n          \n          <Grid container item spacing={4} className='topSection'>\n            \n            <BigNumber \n              color={fontColor} \n              size={fontSizeState} \n              fontFam={fontStyle} \n              state={state}\n            />\n            <ButtonBar \n              addClick={addHandler}\n              subClick={subHandler}\n              resetClick={resetHandler}\n              state={state}\n            />\n\n          </Grid>\n\n          <Grid container item spacing={3} className=\"StyleBar\">\n            \n            <DarkToggle \n              mode={darkMode}\n              clicked={darkModeToggle}\n            />\n            <FontSelector \n              font={ fontStyle }\n              clicked={ changeFontHandler }\n            />\n\n          <Grid container item spacing={3}>\n            \n            <SizeSelector \n              aria={ valuetext }\n              marks={ marks }\n              changed={ setFontSizeHandler }\n            />\n          </Grid>\n            <ColorModal />\n            <ColorSelectorBar />\n            \n            <Grid item xs={6}>\n              <SketchPicker color={fontColor} onChange={setColorHandler}/>\n            </Grid>\n            <Grid item xs={6}>\n              <SketchPicker color={fontColor} onChange={setColorHandler}/>\n            </Grid>\n            </Grid>\n      </Grid>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}