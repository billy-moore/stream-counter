{"ast":null,"code":"import _slicedToArray from\"/Users/billy.moore/Desktop/Programming/dev2/stream-counter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{createMuiTheme,Grid,MenuItem,FormControl,InputLabel,Paper,Select,Switch,ThemeProvider}from'@material-ui/core';import{deepPurple,purple}from'@material-ui/core/colors';import'./App.css';import AddButton from'./Components/Buttons/AddButton';import SubtractButton from'./Components/Buttons/SubtractButton';import SubDisabledButton from'./Components/Buttons/SubDisabledButton';import ResetButton from'./Components/Buttons/ResetButton';import ResetDisabledButton from'./Components/Buttons/ResetDisabledButton';import{TwitterPicker}from'react-color';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState('DimitriSwank'),_useState4=_slicedToArray(_useState3,2),fontStyle=_useState4[0],setFontStyle=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),darkMode=_useState6[0],setDarkMode=_useState6[1];var _useState7=useState({color:''}),_useState8=_slicedToArray(_useState7,2),fontColor=_useState8[0],setFontColor=_useState8[1];var theme=createMuiTheme({palette:{primary:{main:deepPurple[500]},secondary:{main:purple[500]},type:darkMode?'dark':'light'}});var addHandler=function addHandler(){setState(state+1);};var subHandler=function subHandler(){setState(state-1);};var resetHandler=function resetHandler(){setState(0);};var darkModeToggle=function darkModeToggle(){setDarkMode(!darkMode);setFontColor({color:''});};var changeFontHandler=function changeFontHandler(event){setFontStyle(event.target.value);console.log(event.target.value);};var setColorHandler=function setColorHandler(color){setFontColor({color:color.hex});};return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(Paper,{className:\"App\",children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,className:\"mainGrid\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:fontStyle,style:{height:'200px'},children:/*#__PURE__*/_jsx(\"span\",{style:fontColor,children:state})}),/*#__PURE__*/_jsxs(Grid,{container:true,item:true,spacing:3,className:\"ButtonBar\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(AddButton,{clicked:addHandler})}),/*#__PURE__*/_jsx(Grid,{item:true,children:state>0?/*#__PURE__*/_jsx(SubtractButton,{clicked:subHandler}):/*#__PURE__*/_jsx(SubDisabledButton,{})}),/*#__PURE__*/_jsx(Grid,{item:true,children:state>0?/*#__PURE__*/_jsx(ResetButton,{clicked:resetHandler}):/*#__PURE__*/_jsx(ResetDisabledButton,{})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,item:true,spacing:3,className:\"StyleBar\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(Switch,{checked:darkMode,onChange:darkModeToggle}),/*#__PURE__*/_jsx(\"br\",{}),darkMode?'Dark Mode':'Light Mode']}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(FormControl,{variant:\"filled\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"changeFont\",children:\"Change Font\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"changeFont\",id:\"font\",value:fontStyle,onChange:changeFontHandler,children:[/*#__PURE__*/_jsx(MenuItem,{value:'DimitriSwank',children:\"Dimitri Swank\"}),/*#__PURE__*/_jsx(MenuItem,{value:'Roboto',children:\"Roboto\"}),/*#__PURE__*/_jsx(MenuItem,{value:'ZenDots',children:\"Zen Dots\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(TwitterPicker,{color:fontColor,onChange:setColorHandler})})]})]})})});}export default App;","map":{"version":3,"sources":["/Users/billy.moore/Desktop/Programming/dev2/stream-counter/src/App.js"],"names":["React","useState","createMuiTheme","Grid","MenuItem","FormControl","InputLabel","Paper","Select","Switch","ThemeProvider","deepPurple","purple","AddButton","SubtractButton","SubDisabledButton","ResetButton","ResetDisabledButton","TwitterPicker","App","state","setState","fontStyle","setFontStyle","darkMode","setDarkMode","color","fontColor","setFontColor","theme","palette","primary","main","secondary","type","addHandler","subHandler","resetHandler","darkModeToggle","changeFontHandler","event","target","value","console","log","setColorHandler","hex","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { createMuiTheme, Grid, MenuItem, FormControl, InputLabel, Paper, Select, Switch, ThemeProvider } from '@material-ui/core'\nimport { deepPurple, purple } from '@material-ui/core/colors'\nimport './App.css';\n\nimport AddButton from './Components/Buttons/AddButton'\nimport SubtractButton from './Components/Buttons/SubtractButton'\nimport SubDisabledButton from './Components/Buttons/SubDisabledButton'\nimport ResetButton from './Components/Buttons/ResetButton'\nimport ResetDisabledButton from './Components/Buttons/ResetDisabledButton'\nimport { TwitterPicker } from 'react-color'\n\nfunction App() {\n  const [state, setState] = useState(0)\n  const [fontStyle, setFontStyle] = useState('DimitriSwank')\n  const [darkMode, setDarkMode] = useState(false)\n  const [fontColor, setFontColor] = useState({color: ''})\n  \n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: deepPurple[500],\n      },\n      secondary: {\n        main: purple[500],\n      },\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n  const addHandler = () => {\n    setState(state + 1)\n  }\n\n  const subHandler = () => {\n    setState(state - 1)\n  }\n\n  const resetHandler = () => {\n    setState(0)\n  }\n\n  const darkModeToggle = () => {\n    setDarkMode(!darkMode)\n    setFontColor({color: ''})\n  }\n\n  const changeFontHandler = (event) => {\n    setFontStyle(event.target.value)\n    console.log(event.target.value)\n  }\n\n  const setColorHandler = (color) => {\n    setFontColor({color: color.hex})\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"App\" >\n      <Grid container spacing={4} className='mainGrid'>\n        <Grid item xs={12} className={fontStyle} style={{height: '200px'}}>\n          <span style={fontColor}>\n            {state}\n          </span>\n          \n        </Grid>\n        <Grid container item spacing={3} className=\"ButtonBar\">\n          <Grid item>\n            <AddButton clicked={addHandler} />\n          </Grid>\n          <Grid item >\n            {state > 0 ? \n              <SubtractButton clicked={subHandler} />  : \n              <SubDisabledButton />\n              }     \n          </Grid>\n          <Grid item>\n            { state > 0 ?\n            <ResetButton clicked={resetHandler}/> :\n            <ResetDisabledButton />\n            }\n            </Grid>\n        </Grid>\n        <Grid container item spacing={3} className=\"StyleBar\">\n            <Grid item>\n              <Switch checked={darkMode} onChange={darkModeToggle}/>\n              <br />\n                  {darkMode ? 'Dark Mode' : 'Light Mode'}\n            </Grid>\n            <Grid item xs={4}>\n                <FormControl variant='filled'>\n                  <InputLabel id='changeFont'>\n                      Change Font\n                  </InputLabel>\n                  <Select\n                      labelId='changeFont'\n                      id='font'\n                      value={fontStyle}\n                      onChange={changeFontHandler}\n                      >\n                      <MenuItem value={'DimitriSwank'}>Dimitri Swank</MenuItem>\n                      <MenuItem value={'Roboto'}>Roboto</MenuItem>\n                      <MenuItem value={'ZenDots'}>Zen Dots</MenuItem>\n                      </Select>\n                </FormControl>\n            </Grid>\n            <Grid item>\n              <TwitterPicker color={fontColor} onChange={setColorHandler}/>\n            </Grid>\n        </Grid>\n      </Grid>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}